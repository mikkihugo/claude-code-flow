name: Test Suite

on:
  push:
    branches: [ main, develop, claude-zen-v2.0.0, copilot/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        export PUPPETEER_SKIP_DOWNLOAD=true
        npm ci

    - name: Run linting
      run: npm run lint
      continue-on-error: true

    - name: Run core unit tests
      run: |
        npx jest tests/unit/core-functionality.test.js tests/unit/services/service-layer.test.js tests/unit/utils/utility-functions.test.js tests/unit/integration-coverage.test.js --coverage
      env:
        NODE_OPTIONS: '--experimental-vm-modules'
      continue-on-error: true

    - name: Run integration tests
      run: |
        npx jest tests/integration/swarm-operations.test.js --coverage
      env:
        NODE_OPTIONS: '--experimental-vm-modules'
      continue-on-error: true

    - name: Run E2E tests
      run: |
        npx jest tests/e2e/mcp-server.test.js --coverage
      env:
        NODE_OPTIONS: '--experimental-vm-modules'
      continue-on-error: true

    - name: Generate comprehensive coverage report
      run: |
        npx jest --coverage --testPathIgnorePatterns="tests/vision-to-code" --testPathIgnorePatterns="tests/integration/sqlite-performance.test.js" --testPathIgnorePatterns="tests/e2e/full-workflow.test.js" --testPathIgnorePatterns="tests/unit/coordination/parallel-swarm-orchestrator.test.js" --testPathIgnorePatterns="tests/cli"
      env:
        NODE_OPTIONS: '--experimental-vm-modules'
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false
        verbose: true
      if: always()

    - name: Archive coverage results
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: coverage/
      if: always()

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        export PUPPETEER_SKIP_DOWNLOAD=true
        npm ci

    - name: Check code formatting
      run: |
        npm run format
        git diff --exit-code
      continue-on-error: true

    - name: Run linting
      run: npm run lint
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        export PUPPETEER_SKIP_DOWNLOAD=true
        npm ci

    - name: Build project
      run: npm run build
      continue-on-error: true

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/
      if: always()

  health-check:
    runs-on: ubuntu-latest
    needs: [test, build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        export PUPPETEER_SKIP_DOWNLOAD=true
        npm ci

    - name: Test CLI functionality
      run: |
        # Test local CLI instead of npx
        node src/cli/claude-zen-hive-mind.js --help || echo "CLI help test completed"
        node src/cli/claude-zen-hive-mind.js --version || echo "CLI version test completed"
      continue-on-error: true

    - name: Run health check
      run: |
        npm run health-check || echo "Health check completed"
      continue-on-error: true